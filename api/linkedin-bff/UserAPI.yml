openapi: 3.0.0
info:
  title: Linkedin User API
  description: Linkedin User API allowing user data manipulation
  version: 0.1.0
servers:
  - url: http://localhost:8080/api
    description: localhost

paths:
  /users:
    post:
      summary: Create a new user
      requestBody:
        description: User details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the user
                firstName:
                  type: string
                  description: The first name of the user
                lastName:
                  type: string
                  description: The last name of the user
                password:
                  type: string
                  description: The password of the user
                email:
                  type: string
                  format: email
                  description: The email address of the user
                birthDate:
                  type: string
                  format: date
                  description: The birth date of the user (YYYY-MM-DD)
              required:
                - username
                - firstName
                - lastName
                - password
                - email
                - birthDate
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: "Bad request Email please choose a different one.
                       username already in use please choose a different one.
                       Users must be at least 18 years old to register"

        '500':
          description: Internal server error

  /users/{userId}:
    get:
      summary: Get user details by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the user to fetch
      responses:
        '200':
          description: User details fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Internal server error

    put:
      summary: Update user details
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the user to update
      requestBody:
        description: Updated user details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The new username of the user
                firstName:
                  type: string
                  description: The new first name of the user
                lastName:
                  type: string
                  description: The new last name of the user
                password:
                  type: string
                  description: The new password of the user
                email:
                  type: string
                  format: email
                  description: The new email address of the user
                birthDate:
                  type: string
                  format: date
                  description: The new birth date of the user (YYYY-MM-DD)
                registrationDate:
                  type: string
                  format: date-time
                  description: The new registration date of the user
                lastLoginDate:
                  type: string
                  format: date-time
                  description: The new last login date of the user
              required:
                - username
                - firstName
                - lastName
                - password
                - email
                - birthDate
                - registrationDate
                - lastLoginDate
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request, invalid input
        '404':
          description: User not found
        '500':
          description: Internal server error

  /search-users/{username}:
    get:
      summary: Search users by username
      description: Returns a list of user based on the provided username.
      parameters:
        - name: username
          in: path
          description: Username to search for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the user
        username:
          type: string
          description: The username of the user
        firstName:
          type: string
          description: The first name of the user
        lastName:
          type: string
          description: The last name of the user
        password:
          type: string
          description: The password of the user
        email:
          type: string
          format: email
          description: The email address of the user
        birthDate:
          type: string
          format: date
          description: The birth date of the user (YYYY-MM-DD)
        registrationDate:
          type: string
          format: date-time
          description: The registration date of the user
        lastLoginDate:
          type: string
          format: date-time
          description: The last login date of the user


